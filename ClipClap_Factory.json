{
  "name": "ClipClap-Factory",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -4528,
        -352
      ],
      "id": "92b38832-6002-43f2-bdf3-06be97be4e65",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "model": "gemma3:12b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -3784,
        -4
      ],
      "id": "12c00e5f-2d2c-415f-9901-266cf793202b",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "EUkwF5TTtd8IhXRM",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4e65c5fd-dc06-4a3c-b6fc-a43b0905428e",
              "name": "=target",
              "value": "=https://tldr.tech/ai/{{ $now.minus(1,'days').format('yyyy-MM-dd') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4528,
        -1208
      ],
      "id": "da7ef686-cf15-4c7c-8e78-a638690d0ced",
      "name": "Prepare the URL for the source articles"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:11235/crawl/",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "urls",
              "value": "={{ [$json.target] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4304,
        -1208
      ],
      "id": "4183eea6-557f-4a09-8356-1ae39fecf481",
      "name": "Extract content from the Internet"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Create a prompt for an engaging image from the following text:\n---\n{{ $json.content }}\n---\nResult must include only the prompt. No additional text.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -3856,
        -228
      ],
      "id": "c0455dbd-f9ab-4879-8dc1-f63f3109e04e",
      "name": "Prepare a prompt for image generation",
      "notes": "{{ $json.results[0].markdown.raw_markdown }}"
    },
    {
      "parameters": {
        "model": "gemma3:12b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -3208,
        736
      ],
      "id": "31ff687e-ae62-48ad-84f7-d76c93483de0",
      "name": "Ollama Chat Model1",
      "credentials": {
        "ollamaApi": {
          "id": "EUkwF5TTtd8IhXRM",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Create a prompt for an engaging short video from the following text:\n---\n{{ $json.content }}\n---\nIt should be suitable for creating a cinematic 9:16, 5-second video. It must describe the desired motion and should not exceed 2500 characters.\nResult must include only the prompt. No additional text.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -3280,
        512
      ],
      "id": "c28d7dc8-45cf-462b-a3f4-5889dbd4642f",
      "name": "Prepare a prompt for video generation"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.freepik.com/v1/ai/image-to-video/kling-v2",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-freepik-api-key",
              "value": "FPSXa0c1a25400f3c2c3f3fd7f555a9360d2"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "prompt",
              "value": "={{ $json.video_prompt }}"
            },
            {
              "name": "image",
              "value": "={{ $json.data.generated[0] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2480,
        156
      ],
      "id": "0879ee5b-36f7-4739-a329-2f8f62096aee",
      "name": "Generate Video with Freepik",
      "notesInFlow": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0fcbef47-1b1a-484b-9b06-e983bc4826db",
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "COMPLETED",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2032,
        252
      ],
      "id": "dfbbb4ee-3cc5-43d3-ae23-b14c2386a223",
      "name": "If"
    },
    {
      "parameters": {
        "amount": 1,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1584,
        516
      ],
      "id": "af911c36-2171-41b8-a9b3-b5c3fa636667",
      "name": "Wait",
      "webhookId": "3afbce18-2a6a-47f1-aa61-793596033d35"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5c7b765a-c17b-4c3d-8a99-3d390a24854b",
              "name": "video_prompt",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2928,
        512
      ],
      "id": "acca5170-3d49-4486-99ba-05d31a81d680",
      "name": "Extract video prompt"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -2704,
        80
      ],
      "id": "15b98c00-efad-4106-b358-5133369c5b3d",
      "name": "Prepare data for Freepik API",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "url": "=https://api.freepik.com/v1/ai/image-to-video/kling-v2/{{ $json.data.task_id }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {}
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-freepik-api-key",
              "value": "FPSXa0c1a25400f3c2c3f3fd7f555a9360d2"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2256,
        252
      ],
      "id": "9e30120b-6e81-4b65-b165-113362317f90",
      "name": "Check if video is generated",
      "notesInFlow": false
    },
    {
      "parameters": {
        "url": "={{ $json.data.generated[0] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1808,
        108
      ],
      "id": "1a6181c7-c36f-4948-b885-06a34b8e04c2",
      "name": "Download the generated video"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=./files/{{ $binary.data.fileName }}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -1584,
        108
      ],
      "id": "4e7bbccd-ad6a-4af7-b46a-f03b7ce9eef5",
      "name": "Write the video to file"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        -4528,
        -1536
      ],
      "id": "3f6216b7-cd40-4e88-8ffe-1f701479d7b9",
      "name": "Error Trigger"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=./files/{{$now.format(\"yyyy_MM_dd\")}}_{{ $execution.id }}_news.json",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -3504,
        -880
      ],
      "id": "52c3afeb-cbd0-4bd0-87b5-9ff672c4a283",
      "name": "Save the initial text"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=./files/{{$now.format(\"yyyy_MM_dd\")}}_{{ $execution.id }}_photo_prompt.txt",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -3216,
        -540
      ],
      "id": "cc620745-949d-4491-8480-e830395be2f6",
      "name": "Write image prompt to file"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=./files/{{$now.format(\"yyyy_MM_dd\")}}_{{ $execution.id }}_video_prompt.txt",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -2480,
        396
      ],
      "id": "e7f18e8c-ed49-4d0f-9594-97920280d97d",
      "name": "Write video prompt to file"
    },
    {
      "parameters": {
        "options": {
          "delimiter": ",",
          "headerRow": false
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2032,
        -228
      ],
      "id": "5048f3ea-7ac4-440c-b7b3-8f0ff8b89cee",
      "name": "Convert status data to CSV",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=./files/{{$now.format(\"yyyy_MM_dd\")}}_{{ $execution.id }}_video_generation_status.csv",
        "options": {
          "append": true
        }
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -1808,
        -228
      ],
      "id": "5d540fec-6030-4c22-bf3a-333d4ca43eaa",
      "name": "Save status data to CSV",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "toJson",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -4304,
        -1536
      ],
      "id": "2e28340c-db81-4563-872c-023c796237b9",
      "name": "Convert error to json",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=./files/{{$now.format(\"yyyy_MM_dd\")}}_{{ $execution.id }}_error.json",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -4080,
        -1536
      ],
      "id": "334d1c2a-d276-4196-9911-d0cc7deeb63c",
      "name": "Write error to file"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "SIwcHGRFJCUeoU4Z",
          "mode": "list",
          "cachedResultName": "Log"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -3792,
        -880
      ],
      "name": "Call Log",
      "id": "9c1b77dc-dde2-4f92-a072-059b554f5f2f"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "EOhZDmJO4Mq3yuwN",
          "mode": "list",
          "cachedResultName": "Log"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -3504,
        -540
      ],
      "name": "Call Log_1",
      "id": "ea0ad198-21a1-4d49-acb9-ef0bddc13fe1"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "PkgraccljHqVRl6S",
          "mode": "list",
          "cachedResultName": "Log"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -2704,
        396
      ],
      "name": "Call Log_1_1_1",
      "id": "3b227283-bfdb-4266-86ac-1788f4256227"
    },
    {
      "parameters": {
        "httpRequestMethod": "POST",
        "graphApiVersion": "v22.0",
        "node": "=17841475617920757",
        "edge": "media_publish",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "creation_id",
                "value": "={{ $json.id }}"
              },
              {
                "name": "caption",
                "value": "=Caption"
              },
              {}
            ]
          }
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        208,
        -736
      ],
      "id": "7a74fc63-b8d6-4a5f-ba90-f518026e211d",
      "name": "Facebook Graph API3",
      "credentials": {
        "facebookGraphApi": {
          "id": "2KuweZIBz1nhbAJN",
          "name": "Facebook Graph account 3"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "0UEtd2ETlZL0p5gB",
          "mode": "list",
          "cachedResultName": "Publish video"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "url_replace": "={{ $json.combined_video_path }}",
            "caption": "={{ $('Select News').item.json.title }}}"
          },
          "matchingColumns": [
            "url_replace"
          ],
          "schema": [
            {
              "id": "url_replace",
              "displayName": "url_replace",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "caption",
              "displayName": "caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -464,
        -644
      ],
      "name": "Call Publish video",
      "id": "3e599aef-a176-4c78-b9a7-290889d10892",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 1,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        208,
        -544
      ],
      "id": "60cb4cb8-f206-4d6d-a366-11ed8afdbffd",
      "name": "Wait1",
      "webhookId": "45f8b5d0-6e2c-4689-88ec-7d774977db62"
    },
    {
      "parameters": {
        "hostUrl": "graph-video.facebook.com",
        "graphApiVersion": "v22.0",
        "node": "={{ $json.id }}",
        "options": {
          "fields": {
            "field": [
              {
                "name": "status"
              },
              {
                "name": "status_code"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        -240,
        -644
      ],
      "id": "c8c47bd9-89c4-4fcc-96ac-1929f7d687c0",
      "name": "Facebook Graph API2",
      "alwaysOutputData": true,
      "credentials": {
        "facebookGraphApi": {
          "id": "2KuweZIBz1nhbAJN",
          "name": "Facebook Graph account 3"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "31381b15-daae-404f-bde7-9e48151332a2",
              "leftValue": "={{ $json.status_code }}",
              "rightValue": "FINISHED",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "10b240f1-abe2-40f1-91ac-f7efeff41836",
              "leftValue": "={{ $json.status_code }}",
              "rightValue": "PUBLISHED",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -16,
        -716
      ],
      "id": "f8001aa4-b169-4f92-b684-630c861b3411",
      "name": "If1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "aee99160-d56b-4cb5-9870-80d692bb2615",
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "FAILED",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1808,
        348
      ],
      "id": "28929cc0-76b0-4c49-946b-ea67e7a9eaaf",
      "name": "If2"
    },
    {
      "parameters": {
        "errorMessage": "Video Generation Failed"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -1584,
        300
      ],
      "id": "2f870c4c-2861-4f80-97cc-bad739fefa44",
      "name": "Stop and Error"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Summary of the file. The style must be a TLTR narrative. No metainformation about the structure.\n---\n{{ $json.results[0].markdown.raw_markdown }}\n---\nPick a random story and write the summary of it.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -4080,
        -1312
      ],
      "id": "b08b1d2a-5a30-4d46-98eb-40b0df7fafd2",
      "name": "Prepare a prompt for image generation1",
      "notes": "{{ $json.results[0].markdown.raw_markdown }}"
    },
    {
      "parameters": {
        "model": "gemma3:12b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -4008,
        -1088
      ],
      "id": "a77a91ce-b519-40b9-b500-d8a6af671304",
      "name": "Ollama Chat Model2",
      "credentials": {
        "ollamaApi": {
          "id": "EUkwF5TTtd8IhXRM",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0fcbef47-1b1a-484b-9b06-e983bc4826db",
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "COMPLETED",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2928,
        -296
      ],
      "id": "9f193707-d256-444e-b557-d98ba7b653c0",
      "name": "If3"
    },
    {
      "parameters": {
        "amount": 1,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -2480,
        -36
      ],
      "id": "93bafcb9-f534-4b64-b13d-1dae62eadeaa",
      "name": "Wait2",
      "webhookId": "3afbce18-2a6a-47f1-aa61-793596033d35"
    },
    {
      "parameters": {
        "url": "=https://api.freepik.com/v1/ai/text-to-image/imagen3/{{ $json.data.task_id }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {}
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-freepik-api-key",
              "value": "FPSXa0c1a25400f3c2c3f3fd7f555a9360d2"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3216,
        -132
      ],
      "id": "dcf39f87-9b73-43b7-ac63-1643c3057934",
      "name": "Check if video is generated1",
      "notesInFlow": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "aee99160-d56b-4cb5-9870-80d692bb2615",
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "FAILED",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2704,
        -256
      ],
      "id": "63acfc04-f0a4-46a3-95cb-2ac7d95fc7cb",
      "name": "If4"
    },
    {
      "parameters": {
        "errorMessage": "Video Generation Failed"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -2480,
        -348
      ],
      "id": "688d419a-ec25-41f4-ad7b-f2128cd05d5d",
      "name": "Stop and Error1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.freepik.com/v1/ai/text-to-image/imagen3",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-freepik-api-key",
              "value": "FPSXa0c1a25400f3c2c3f3fd7f555a9360d2"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"num_images\": 1,\n  \"aspect_ratio\": \"social_story_9_16\",\n  \"person_generation\": \"allow_all\",\n  \"safety_settings\": \"block_none\",\n  \"prompt\": \"{{ $json.output.replace(/\"/g,'\\\\\"') }}\",\n  \"styling\": {\n    \"style\": \"photo\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3504,
        -132
      ],
      "id": "ed77fab5-d4d3-4aa9-a42a-9a899c60f195",
      "name": "Generate Photo with Freepik1",
      "notesInFlow": false
    },
    {
      "parameters": {
        "url": "={{ $json.data.generated[0] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2704,
        -540
      ],
      "id": "9c04116f-f7f0-4b7e-951a-08b19733370b",
      "name": "Download the generated video1"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=./files/{{ $binary.data.fileName }}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -2480,
        -540
      ],
      "id": "8710e2a8-d2be-43ea-a010-c6c07cda65c7",
      "name": "Write the video to file1"
    },
    {
      "parameters": {
        "url": "https://www.dnevnik.bg/rss/",
        "options": {
          "customFields": ""
        }
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        -4304,
        -352
      ],
      "id": "4926c5bf-bbd4-4171-826c-2ca5b09a5dbd",
      "name": "RSS Read"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $items()[Math.round(Math.random()*$items().length)].json}}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4080,
        -352
      ],
      "id": "57fa0892-dea4-4e7d-8181-615d9f6599fa",
      "name": "Select News",
      "executeOnce": true
    },
    {
      "parameters": {
        "resource": "speech",
        "voice": {
          "__rl": true,
          "value": "zzBTsLBFM6AOJtkr1e9b",
          "mode": "id"
        },
        "text": "={{ $json.title }}",
        "additionalOptions": {},
        "requestOptions": {}
      },
      "type": "@elevenlabs/n8n-nodes-elevenlabs.elevenLabs",
      "typeVersion": 1,
      "position": [
        -1808,
        -736
      ],
      "id": "17d2e315-2a30-4beb-b9d3-4343085852ef",
      "name": "Convert text to speech",
      "credentials": {
        "elevenLabsApi": {
          "id": "yYJtvo3bZoPmuc8T",
          "name": "ElevenLabs account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ffmpeg-success-check",
              "leftValue": "={{ $json.success }}",
              "rightValue": "={{ true }}",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -912,
        -548
      ],
      "id": "7807e97f-bc70-4086-a488-cab980eb705e",
      "name": "Check ffmpeg Success"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "combined-video-path",
              "name": "combined_video_path",
              "value": "=./files/{{$now.format(\"yyyy_MM_dd\")}}_{{ $execution.id }}_combined.mp4",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -688,
        -644
      ],
      "id": "434d7c04-5fb5-4aaa-9a87-22b687cf42e5",
      "name": "Set Combined Video Path"
    },
    {
      "parameters": {
        "errorMessage": "ffmpeg failed to combine audio and video"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -688,
        -452
      ],
      "id": "2ba51b61-2d1c-4419-a17e-56f7f9e2be80",
      "name": "ffmpeg Error Stop"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://ffmpeg-api:8080/combine",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "audio_file",
              "value": "={{ $('Write Audio File').item.json.fileName }}"
            },
            {
              "name": "video_file",
              "value": "={{ $('Write the video to file').item.json.fileName }}"
            },
            {
              "name": "output_file",
              "value": "=./files/{{$now.format(\"yyyy_MM_dd\")}}_{{ $execution.id }}_combined.mp4"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1136,
        -548
      ],
      "id": "a11a70b9-f765-45b3-8b22-e8f3025739dc",
      "name": "Merge audio and video"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=./files/{{$now.format(\"yyyy_MM_dd\")}}_{{ $execution.id }}_voice_over.mp3",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -1584,
        -736
      ],
      "id": "10e3c80e-4471-43f9-8d35-f32abb54c985",
      "name": "Write Audio File"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -1360,
        -548
      ],
      "id": "c3285eaa-f4ff-49c1-8149-4328eff38cb1",
      "name": "Prepare data for Freepik API1",
      "alwaysOutputData": true
    }
  ],
  "pinData": {
    "When clicking ‘Execute workflow’": [
      {
        "json": {}
      }
    ]
  },
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "RSS Read",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Prepare a prompt for image generation",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Prepare the URL for the source articles": {
      "main": [
        [
          {
            "node": "Extract content from the Internet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract content from the Internet": {
      "main": [
        [
          {
            "node": "Prepare a prompt for image generation1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare a prompt for image generation": {
      "main": [
        [
          {
            "node": "Call Log_1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Generate Photo with Freepik1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Prepare a prompt for video generation",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Prepare a prompt for video generation": {
      "main": [
        [
          {
            "node": "Extract video prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Video with Freepik": {
      "main": [
        [
          {
            "node": "Check if video is generated",
            "type": "main",
            "index": 0
          },
          {
            "node": "Convert status data to CSV",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Download the generated video",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Check if video is generated",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract video prompt": {
      "main": [
        [
          {
            "node": "Call Log_1_1_1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Prepare data for Freepik API",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Prepare data for Freepik API": {
      "main": [
        [
          {
            "node": "Generate Video with Freepik",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if video is generated": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          },
          {
            "node": "Convert status data to CSV",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download the generated video": {
      "main": [
        [
          {
            "node": "Write the video to file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Write the video to file": {
      "main": [
        [
          {
            "node": "Prepare data for Freepik API1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check ffmpeg Success": {
      "main": [
        [
          {
            "node": "Set Combined Video Path",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ffmpeg Error Stop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Combined Video Path": {
      "main": [
        [
          {
            "node": "Call Publish video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Trigger": {
      "main": [
        [
          {
            "node": "Convert error to json",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert status data to CSV": {
      "main": [
        [
          {
            "node": "Save status data to CSV",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert error to json": {
      "main": [
        [
          {
            "node": "Write error to file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Log": {
      "main": [
        [
          {
            "node": "Save the initial text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Log_1": {
      "main": [
        [
          {
            "node": "Write image prompt to file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Log_1_1_1": {
      "main": [
        [
          {
            "node": "Write video prompt to file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Publish video": {
      "main": [
        [
          {
            "node": "Facebook Graph API2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Facebook Graph API2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Facebook Graph API2": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Facebook Graph API3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Prepare a prompt for image generation1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Download the generated video1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Prepare data for Freepik API",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Check if video is generated1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if video is generated1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Stop and Error1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Photo with Freepik1": {
      "main": [
        [
          {
            "node": "Check if video is generated1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download the generated video1": {
      "main": [
        [
          {
            "node": "Write the video to file1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RSS Read": {
      "main": [
        [
          {
            "node": "Select News",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select News": {
      "main": [
        [
          {
            "node": "Call Log",
            "type": "main",
            "index": 0
          },
          {
            "node": "Prepare a prompt for image generation",
            "type": "main",
            "index": 0
          },
          {
            "node": "Prepare a prompt for video generation",
            "type": "main",
            "index": 0
          },
          {
            "node": "Convert text to speech",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert text to speech": {
      "main": [
        [
          {
            "node": "Write Audio File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge audio and video": {
      "main": [
        [
          {
            "node": "Check ffmpeg Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Write Audio File": {
      "main": [
        [
          {
            "node": "Prepare data for Freepik API1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare data for Freepik API1": {
      "main": [
        [
          {
            "node": "Merge audio and video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "b4b3bd51-5437-4959-9700-2d151fb90cb1",
  "meta": {
    "instanceId": "b8e5a0b86e5e2e211bec790018ac797007586ee36f18727c0ba0ff6049db12c0"
  },
  "id": "FaB8StZGwh71vK4a",
  "tags": []
}